import { useState } from 'react'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { useProduct } from '../redux/hooks/use-product'

export default function Home() {
  //state
  const { products, createProduct, deleteProduct, updateProduct } = useProduct()
  const [product, setProduct] = useState({ id: null, name: '', description: '' })

  //actions
  const handleProductInputChange = event => {
    setProduct(product => ({
      ...product,
      [event.target.name]: event.target.value
    }))
  }

  const handleProductSubmit = (event) => {
    event.preventDefault();
    if(!product.name || !product.description) {
      window.alert('Product details required')
      return
    }

    if(!product.id) {
      createProduct({ name: product.name, description: product.description })
    } else {
      updateProduct(product)
    }

    setProduct({id: null, name: '', description: ''})
  }
  const handleProductSelect = (id) => {
    const selectedProduct = products.find(product => product.id === id)
    setProduct(selectedProduct)
  }
  const handleProductRemove = (id) => event => {
    event.stopPropagation()
    deleteProduct({ id })
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <span>Products</span>!
        </h1>

        <p className={styles.description}>
          {products.length ? 'Choose from products list below' : 'Add products now!'}
        </p>

        <form className={styles.grid} onSubmit={handleProductSubmit}>
            <div className={styles.input}>
              <label htmlFor='name'>Product Name</label>
              <input type="text" placeholder="Product Name" id="name" name="name" value={product.name} onInput={handleProductInputChange}  />
            </div>
            <div className={styles.input}>
              <label htmlFor='description'>Product Description</label>
              <input type="text" placeholder="Product Name" id="description" name="description" value={product.description} onInput={handleProductInputChange} />
            </div>
            <button type="submit">Submit</button>
        </form>
        <div className={styles.grid}>
          {
            products.map((product) => (
              <div className={styles.card} key={product.id} onClick={() => handleProductSelect(product.id)}>
                <h2>{product.name}</h2>
                <p>{product.description}</p>
                <span onClick={handleProductRemove(product.id)} className={styles.cross}>&times;</span>
              </div>
            ))
          }
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://www.linkedin.com/in/joseederangojr/"
          target="_blank"
          rel="noopener noreferrer"
        >
          Built with love by{' '}
          <span className={styles.logo}>
            Jose Ederango Jr.
          </span>
        </a>
      </footer>
    </div>
  )
}
